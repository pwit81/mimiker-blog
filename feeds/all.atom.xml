<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Mimiker Project</title><link href="https://pwit81.github.io/yetanotherpagestest/" rel="alternate"></link><link href="https://pwit81.github.io/yetanotherpagestest/feeds/all.atom.xml" rel="self"></link><id>https://pwit81.github.io/yetanotherpagestest/</id><updated>2019-11-21T10:20:00+01:00</updated><subtitle>a Unix-like operating system</subtitle><entry><title>New syscall, userland programs, signal handling improved, other syscalls cleaned up</title><link href="https://pwit81.github.io/yetanotherpagestest/new-syscall-userland-programs-signal-handling-improved-other-syscalls-cleaned-up.html" rel="alternate"></link><published>2019-11-21T10:20:00+01:00</published><updated>2019-11-21T10:20:00+01:00</updated><author><name>Mimiker Team</name></author><id>tag:pwit81.github.io,2019-11-21:/yetanotherpagestest/new-syscall-userland-programs-signal-handling-improved-other-syscalls-cleaned-up.html</id><summary type="html">&lt;p&gt;Good news everyone, we start posting weekly updates on Mimiker kernel
development. Read below what our team has coded&amp;nbsp;recently!&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;ioctl&lt;/code&gt; syscall&lt;/h4&gt;
&lt;p&gt;As &lt;a href="https://netbsd.gw.com/cgi-bin/man-cgi?ioctl"&gt;NetBSD manpage&lt;/a&gt;&amp;nbsp;says&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The ioctl() function manipulates the underlying device parameters of
special files.  In particular, many operating characteristics of
character special files (e.g. terminals) may …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Good news everyone, we start posting weekly updates on Mimiker kernel
development. Read below what our team has coded&amp;nbsp;recently!&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;ioctl&lt;/code&gt; syscall&lt;/h4&gt;
&lt;p&gt;As &lt;a href="https://netbsd.gw.com/cgi-bin/man-cgi?ioctl"&gt;NetBSD manpage&lt;/a&gt;&amp;nbsp;says&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The ioctl() function manipulates the underlying device parameters of
special files.  In particular, many operating characteristics of
character special files (e.g. terminals) may be controlled with
ioctl()&amp;nbsp;requests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And that&amp;#8217;s precisely the reason we need &lt;code&gt;ioctl&lt;/code&gt;. Mimiker terminal
handling capabilities are mediocre. We need colors, fonts and special
characters support in order to implement genuine terminal&amp;nbsp;handling.&lt;/p&gt;
&lt;h4&gt;netbsd userland&amp;nbsp;port&lt;/h4&gt;
&lt;p&gt;No &lt;span class="caps"&gt;OS&lt;/span&gt; kernel itself poses any value to end users. Therefore an
extensive effort is being put to run some usefull stuff on top of
Mimiker kernel. We already have some success stories here, like
running Doom (in non-interactive mode) and lua script interpreter, but
more elemenary command-line tools are needed. Our latest codebase
brings in addition to simple NetBSD ports of &lt;code&gt;/usr/bin&lt;/code&gt; tools (&lt;code&gt;cat&lt;/code&gt;,
&lt;code&gt;cmp&lt;/code&gt;, &lt;code&gt;col&lt;/code&gt;, &lt;code&gt;cut&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;find&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;join&lt;/code&gt;, &lt;code&gt;kill&lt;/code&gt;,
&lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;, &lt;code&gt;tr&lt;/code&gt;, &lt;code&gt;wc&lt;/code&gt;), the Korn Shell interpreter &lt;code&gt;ksh&lt;/code&gt;. Though
not fully functional yet, it will provide true Unix&amp;nbsp;experience!&lt;/p&gt;
&lt;h4&gt;progress in signal&amp;nbsp;handling&lt;/h4&gt;
&lt;h5&gt;syscalls&amp;nbsp;cleanup&lt;/h5&gt;
&lt;p&gt;naprawienie getdirentries przywróciło ls dołożenie ioctl pozwoli nam
zrobić obsługę terminala • naprawienie execve przywróciło działanie
skryptów lua • dołożyliśmy wywołania systemowe, które przywróciły
działanie setjmp i longjmp (lua + ksh powróciły do&amp;nbsp;życia)&lt;/p&gt;</content></entry><entry><title>Welcome!</title><link href="https://pwit81.github.io/yetanotherpagestest/welcome.html" rel="alternate"></link><published>2019-10-11T10:20:00+02:00</published><updated>2019-10-11T10:20:00+02:00</updated><author><name>Mimiker Team</name></author><id>tag:pwit81.github.io,2019-10-11:/yetanotherpagestest/welcome.html</id><content type="html">&lt;p&gt;Welcome to Mimiker&amp;nbsp;blog!&lt;/p&gt;
&lt;p&gt;Good news&amp;nbsp;everyone!&lt;/p&gt;</content></entry></feed>